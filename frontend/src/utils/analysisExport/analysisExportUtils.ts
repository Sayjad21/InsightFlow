import type { AnalysisResult } from "../../types";
import { generateTextContent } from "./txtUtil";
import { downloadFile } from "../helpers/downloadFile";
import { generateMarkdownContent } from "./mdUtil";
import { PdfExporter } from "../helpers/pdfFunctions";
import { generatePdfContents } from "./pdfUtil";

// Generate TXT export
export function exportToTxt(analysisResult: AnalysisResult): void {
  const content = generateTextContent(analysisResult);
  const blob = new Blob([content], { type: "text/plain" });
  downloadFile(blob, `${analysisResult.company_name}_analysis.txt`);
}

// Generate Markdown export
export function exportToMarkdown(analysisResult: AnalysisResult): void {
  const content = generateMarkdownContent(analysisResult);
  const blob = new Blob([content], { type: "text/markdown" });
  downloadFile(blob, `${analysisResult.company_name}_analysis.md`);
}

// Generate PDF export
export async function exportToPdf(analysisResult: AnalysisResult) {
  const pdf = new PdfExporter();

  try {
    // Title Page
    pdf.addText("Business Analysis Report", 20, "bold");
    pdf.addText(analysisResult.company_name, 16);
    pdf.addText(`Generated on: ${new Date().toLocaleDateString()}`, 10);

    // Generate all PDF contents
    await generatePdfContents(pdf, analysisResult);

    // Footer
    pdf.checkPageBreak(30);
    pdf.addText(
      "Generated by InsightFlow - AI-Powered Competitive Intelligence",
      8
    );

    // Save PDF
    pdf.save(`${analysisResult.company_name}_analysis.pdf`);
  } catch (err) {
    console.error("Failed to generate PDF:", err);
    exportToTxt(analysisResult); // fallback
  }
}

///////////////////////

// // Generate PDF export with images and formatted content
// export async function exportToPdf(
//   analysisResult: AnalysisResult
// ): Promise<void> {
//   try {
//     // Dynamic import to keep bundle size smaller
//     const jsPDF = (await import("jspdf")).default;

//     const pdf = new jsPDF();
//     let yPosition = 20;
//     const lineHeight = 7;
//     const pageHeight = pdf.internal.pageSize.height - 20;
//     const pageWidth = pdf.internal.pageSize.width;

//     // Helper function to add a new page if needed
//     const checkPageBreak = (requiredHeight: number) => {
//       if (yPosition + requiredHeight > pageHeight) {
//         pdf.addPage();
//         yPosition = 20;
//       }
//     };

//     // Helper function to add text with proper formatting
//     const addText = (text: string, fontSize = 10, fontStyle = "normal") => {
//       checkPageBreak(lineHeight * 2);
//       pdf.setFontSize(fontSize);
//       pdf.setFont("times", fontStyle);

//       const wrappedLines = pdf.splitTextToSize(text, 170);
//       if (Array.isArray(wrappedLines)) {
//         for (const wrappedLine of wrappedLines) {
//           checkPageBreak(lineHeight);
//           pdf.text(wrappedLine, 20, yPosition);
//           yPosition += lineHeight;
//         }
//       } else {
//         pdf.text(wrappedLines, 20, yPosition);
//         yPosition += lineHeight;
//       }
//       yPosition += 3; // Extra spacing after text blocks
//     };

//     // Convert URL-based image to base64
//     async function urlToBase64(url: string): Promise<string | null> {
//       try {
//         // If it's already base64, return as is
//         if (url.startsWith("data:")) {
//           return url;
//         }

//         // Fetch the image from URL
//         const response = await fetch(url, {
//           mode: "cors",
//           credentials: "omit",
//         });

//         if (!response.ok) {
//           console.warn(`Failed to fetch image from URL: ${url}`);
//           return null;
//         }

//         const blob = await response.blob();

//         return new Promise((resolve, reject) => {
//           const reader = new FileReader();
//           reader.onloadend = () => resolve(reader.result as string);
//           reader.onerror = reject;
//           reader.readAsDataURL(blob);
//         });
//       } catch (error) {
//         console.error(`Error converting URL to base64: ${url}`, error);
//         return null;
//       }
//     }

//     // Updated addImage function
//     const addImage = async (
//       imageDataOrUrl: string,
//       title: string,
//       maxWidth = 150,
//       maxHeight = 100
//     ) => {
//       try {
//         const imageHeight = Math.min(maxHeight, 80);
//         checkPageBreak(imageHeight + 20);

//         // Add title
//         pdf.setFontSize(12);
//         pdf.setFont("times", "bold");
//         pdf.text(title, 20, yPosition);
//         yPosition += 15;

//         // Calculate X position to center the image
//         const imageX = (pageWidth - maxWidth) / 2;

//         // Convert URL to Base64 if necessary
//         let base64ToAdd = imageDataOrUrl;
//         if (imageDataOrUrl.startsWith("http")) {
//           const loadedBase64 = await urlToBase64(imageDataOrUrl);
//           if (!loadedBase64) {
//             pdf.setFontSize(10);
//             pdf.setFont("times", "normal");
//             pdf.text(`[Image: ${title} - Unable to load]`, 20, yPosition);
//             yPosition += 15;
//             return;
//           }
//           base64ToAdd = loadedBase64;
//         } else if (!imageDataOrUrl.startsWith("data:")) {
//           base64ToAdd = `data:image/png;base64,${imageDataOrUrl}`;
//         }

//         // Add image to PDF
//         pdf.addImage(
//           base64ToAdd,
//           "PNG",
//           imageX,
//           yPosition,
//           maxWidth,
//           imageHeight
//         );
//         yPosition += imageHeight + 15;
//       } catch (error) {
//         console.error(`Failed to add image ${title}:`, error);
//         pdf.setFontSize(10);
//         pdf.setFont("times", "normal");
//         pdf.text(`[Image: ${title} - Error loading]`, 20, yPosition);
//         yPosition += 15;
//       }
//     };

//     // Title Page
//     pdf.setFontSize(20);
//     pdf.setFont("times", "bold");
//     pdf.text(`Business Analysis Report`, 20, yPosition);
//     yPosition += 15;

//     pdf.setFontSize(16);
//     pdf.text(`${analysisResult.company_name}`, 20, yPosition);
//     yPosition += 10;

//     pdf.setFontSize(10);
//     pdf.setFont("times", "normal");
//     pdf.text(`Generated on: ${new Date().toLocaleDateString()}`, 20, yPosition);
//     yPosition += 20;

//     // Table of Contents
//     addText("TABLE OF CONTENTS", 14, "bold");
//     let tocIndex = 1;
//     if (analysisResult.summaries?.length)
//       addText(`${tocIndex++}. Competitive Intelligence`);
//     if (analysisResult.strategy_recommendations)
//       addText(`${tocIndex++}. Differentiation Strategy`);
//     if (analysisResult.linkedin_analysis)
//       addText(`${tocIndex++}. LinkedIn Intelligence`);
//     if (analysisResult.swot_lists) addText(`${tocIndex++}. SWOT Analysis`);
//     if (analysisResult.porter_forces)
//       addText(`${tocIndex++}. Porter's Five Forces`);
//     if (analysisResult.bcg_matrix) addText(`${tocIndex++}. BCG Matrix`);
//     if (analysisResult.mckinsey_7s) addText(`${tocIndex++}. McKinsey 7S Model`);

//     yPosition += 10;

//     // 1. Competitive Intelligence
//     if (analysisResult.summaries && analysisResult.summaries.length > 0) {
//       addText("1. COMPETITIVE INTELLIGENCE", 14, "bold");
//       analysisResult.summaries.forEach((summary, index) => {
//         addText(`Analysis ${index + 1}:`, 12, "bold");
//         addText(cleanHtmlContent(summary));
//         if (analysisResult.sources && analysisResult.sources[index]) {
//           addText(`Source: ${analysisResult.sources[index]}`, 9);
//         }
//       });
//     }

//     // 2. Differentiation Strategy
//     if (analysisResult.strategy_recommendations) {
//       addText("2. DIFFERENTIATION STRATEGY", 14, "bold");
//       addText(cleanHtmlContent(analysisResult.strategy_recommendations));
//     }

//     // 3. LinkedIn Intelligence
//     if (analysisResult.linkedin_analysis) {
//       addText("3. LINKEDIN INTELLIGENCE", 14, "bold");
//       addText(cleanHtmlContent(analysisResult.linkedin_analysis));
//     }

//     // 4. SWOT Analysis
//     if (analysisResult.swot_lists) {
//       addText("4. SWOT ANALYSIS", 14, "bold");

//       addText("STRENGTHS:", 12, "bold");
//       analysisResult.swot_lists.strengths.forEach((item) =>
//         addText(`• ${item}`)
//       );

//       addText("WEAKNESSES:", 12, "bold");
//       analysisResult.swot_lists.weaknesses.forEach((item) =>
//         addText(`• ${item}`)
//       );

//       addText("OPPORTUNITIES:", 12, "bold");
//       analysisResult.swot_lists.opportunities.forEach((item) =>
//         addText(`• ${item}`)
//       );

//       addText("THREATS:", 12, "bold");
//       analysisResult.swot_lists.threats.forEach((item) => addText(`• ${item}`));

//       // Add SWOT visualization if available
//       if (analysisResult.swot_image) {
//         await addImage(
//           analysisResult.swot_image,
//           "SWOT Analysis Visualization"
//         );
//       }
//     }

//     // 5. Porter's Five Forces
//     if (analysisResult.porter_forces) {
//       addText("5. PORTER'S FIVE FORCES", 14, "bold");

//       Object.entries(analysisResult.porter_forces).forEach(([force, items]) => {
//         addText(`${force.toUpperCase().replace("_", " ")}:`, 12, "bold");
//         items.forEach((item) => addText(`• ${item}`));
//       });

//       // Add Porter's Five Forces visualization if available
//       if (analysisResult.porter_image) {
//         await addImage(
//           analysisResult.porter_image,
//           "Porter's Five Forces Visualization"
//         );
//       }
//     }

//     // 6. BCG Matrix
//     if (analysisResult.bcg_matrix) {
//       addText("6. BCG MATRIX", 14, "bold");

//       Object.entries(analysisResult.bcg_matrix).forEach(([product, values]) => {
//         addText(`${product}:`, 12, "bold");
//         addText(`  Market Share: ${values.market_share}`);
//         addText(`  Growth Rate: ${values.growth_rate}%`);
//       });

//       // Add BCG Matrix visualization if available
//       if (analysisResult.bcg_image) {
//         await addImage(analysisResult.bcg_image, "BCG Matrix Visualization");
//       }
//     }

//     // 7. McKinsey 7S
//     if (analysisResult.mckinsey_7s) {
//       addText("7. MCKINSEY 7S MODEL", 14, "bold");

//       Object.entries(analysisResult.mckinsey_7s).forEach(([element, value]) => {
//         addText(`${element.toUpperCase().replace("_", " ")}: ${value}`);
//       });

//       // Add McKinsey 7S visualization if available
//       if (analysisResult.mckinsey_image) {
//         await addImage(
//           analysisResult.mckinsey_image,
//           "McKinsey 7S Model Visualization"
//         );
//       }
//     }

//     // Add PESTEL Analysis if available
//     if (analysisResult.pestel_image) {
//       addText("PESTEL ANALYSIS", 14, "bold");
//       await addImage(
//         analysisResult.pestel_image,
//         "PESTEL Analysis Visualization"
//       );
//     }

//     // Footer
//     checkPageBreak(30);
//     pdf.setFontSize(8);
//     pdf.setFont("times", "normal");
//     pdf.text(
//       "Generated by InsightFlow - AI-Powered Competitive Intelligence",
//       20,
//       yPosition
//     );

//     pdf.save(`${analysisResult.company_name}_analysis.pdf`);
//   } catch (error) {
//     console.error("Failed to generate PDF:", error);
//     // Fallback to text export
//     exportToTxt(analysisResult);
//   }
// }
